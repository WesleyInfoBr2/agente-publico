import streamlit as st
import pandas as pd
import numpy as np
import os

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="Dados Abertos Gov - Requisitos",
    page_icon="üìã",
    layout="wide",
    initial_sidebar_state="expanded"
)

# Estilo CSS personalizado
st.markdown("""
<style>
    .main-header {
        font-size: 2rem;
        font-weight: bold;
        margin-bottom: 1rem;
    }
    .sub-header {
        font-size: 1.5rem;
        font-weight: bold;
        margin-bottom: 0.5rem;
    }
    .info-box {
        background-color: #f0f2f6;
        border-radius: 0.5rem;
        padding: 1rem;
        margin-bottom: 1rem;
    }
</style>
""", unsafe_allow_html=True)

# Cabe√ßalho
st.markdown('<div class="main-header">üìã Requisitos da Aplica√ß√£o</div>', unsafe_allow_html=True)

# Vis√£o geral
st.markdown("""
Esta p√°gina documenta os requisitos e especifica√ß√µes da aplica√ß√£o Dados Abertos Gov, 
servindo como refer√™ncia para desenvolvedores e usu√°rios.
""")

# Requisitos funcionais
st.markdown('<div class="sub-header">Requisitos Funcionais</div>', unsafe_allow_html=True)

requisitos_funcionais = [
    {
        "id": "RF01",
        "titulo": "Navega√ß√£o Hier√°rquica de Dados",
        "descricao": "A aplica√ß√£o deve permitir navega√ß√£o hier√°rquica por Origem (Portal da Transpar√™ncia, dados.gov.br), Fonte (agrupamento por √°rea) e Base (conjuntos espec√≠ficos).",
        "prioridade": "Alta"
    },
    {
        "id": "RF02",
        "titulo": "Carregamento Sob Demanda",
        "descricao": "Os dados devem ser carregados apenas quando solicitados pelo usu√°rio, sem armazenamento pr√©vio de grandes volumes.",
        "prioridade": "Alta"
    },
    {
        "id": "RF03",
        "titulo": "An√°lise Estat√≠stica Descritiva",
        "descricao": "Permitir an√°lise descritiva dos dados, incluindo medidas estat√≠sticas e visualiza√ß√µes.",
        "prioridade": "Alta"
    },
    {
        "id": "RF04",
        "titulo": "Estat√≠stica Inferencial",
        "descricao": "Suportar an√°lises de correla√ß√£o, regress√£o e outros m√©todos inferenciais.",
        "prioridade": "M√©dia"
    },
    {
        "id": "RF05",
        "titulo": "An√°lise de S√©ries Temporais",
        "descricao": "Implementar funcionalidades para an√°lise de s√©ries temporais, incluindo m√©dia m√≥vel e modelos ARIMA.",
        "prioridade": "M√©dia"
    },
    {
        "id": "RF06",
        "titulo": "Modelos de Machine Learning",
        "descricao": "Permitir a cria√ß√£o e aplica√ß√£o de modelos de machine learning como redes neurais, classifica√ß√£o e agrupamento.",
        "prioridade": "Baixa"
    },
    {
        "id": "RF07",
        "titulo": "An√°lise Qualitativa (NLP)",
        "descricao": "Suportar an√°lise qualitativa de dados textuais usando processamento de linguagem natural.",
        "prioridade": "Baixa"
    },
    {
        "id": "RF08",
        "titulo": "Cruzamento de Dados",
        "descricao": "Permitir o cruzamento de dados de diferentes fontes e bases.",
        "prioridade": "Alta"
    },
    {
        "id": "RF09",
        "titulo": "Exporta√ß√£o de Resultados",
        "descricao": "Permitir a exporta√ß√£o de resultados em formato de imagem (gr√°ficos) e CSV (tabelas/dataframes).",
        "prioridade": "Alta"
    },
    {
        "id": "RF10",
        "titulo": "Assist√™ncia com IA",
        "descricao": "Utilizar IA para interpretar necessidades dos usu√°rios e gerar c√≥digo Python para an√°lises.",
        "prioridade": "M√©dia"
    }
]

# Exibir requisitos funcionais em tabela
st.dataframe(
    pd.DataFrame(requisitos_funcionais),
    use_container_width=True,
    hide_index=True
)

# Requisitos n√£o funcionais
st.markdown('<div class="sub-header">Requisitos N√£o Funcionais</div>', unsafe_allow_html=True)

requisitos_nao_funcionais = [
    {
        "id": "RNF01",
        "categoria": "Usabilidade",
        "descricao": "A interface deve ser intuitiva e facilitar a compreens√£o das bases dispon√≠veis.",
        "crit√©rio": "Usu√°rios sem conhecimento t√©cnico devem conseguir realizar an√°lises b√°sicas."
    },
    {
        "id": "RNF02",
        "categoria": "Desempenho",
        "descricao": "A aplica√ß√£o deve processar apenas os dados mobilizados mediante solicita√ß√£o.",
        "crit√©rio": "Tempo de resposta para consultas simples < 5 segundos."
    },
    {
        "id": "RNF03",
        "categoria": "Compatibilidade",
        "descricao": "A aplica√ß√£o deve ser compat√≠vel com as APIs do Portal da Transpar√™ncia e dados.gov.br.",
        "crit√©rio": "Integra√ß√£o bem-sucedida com todas as APIs especificadas."
    },
    {
        "id": "RNF04",
        "categoria": "Escalabilidade",
        "descricao": "A estrutura deve permitir f√°cil adi√ß√£o de novas fontes de dados.",
        "crit√©rio": "Adi√ß√£o de nova fonte sem modifica√ß√£o da arquitetura principal."
    },
    {
        "id": "RNF05",
        "categoria": "Tecnologia",
        "descricao": "Utilizar Python, Streamlit, OpenAI e pacotes Python para an√°lises estat√≠sticas.",
        "crit√©rio": "Conformidade com as tecnologias especificadas."
    },
    {
        "id": "RNF06",
        "categoria": "Hospedagem",
        "descricao": "A aplica√ß√£o deve ser hospedada no Streamlit Cloud.",
        "crit√©rio": "Deploy bem-sucedido e acess√≠vel via URL p√∫blica."
    },
    {
        "id": "RNF07",
        "categoria": "Responsividade",
        "descricao": "A interface deve ser responsiva e funcionar em diferentes dispositivos.",
        "crit√©rio": "Funcionamento adequado em desktop e dispositivos m√≥veis."
    }
]

# Exibir requisitos n√£o funcionais em tabela
st.dataframe(
    pd.DataFrame(requisitos_nao_funcionais),
    use_container_width=True,
    hide_index=True
)

# Fontes de dados
st.markdown('<div class="sub-header">Fontes de Dados</div>', unsafe_allow_html=True)

st.markdown("""
### Portal da Transpar√™ncia
- **URL Base**: http://api.portaldatransparencia.gov.br/api-de-dados/
- **Autentica√ß√£o**: Chave de API (opcional para algumas consultas)
- **Formato**: JSON
- **Categorias Principais**:
  - Bolsa Fam√≠lia e Benef√≠cios Sociais
  - Servidores P√∫blicos
  - Despesas e Or√ßamento
  - Contratos e Licita√ß√µes
  - Cadastros (CEIS, CNEP, CEPIM, CEAF)

### dados.gov.br
- **URL Base**: https://dados.gov.br/api/3/
- **Autentica√ß√£o**: N√£o requerida para a maioria das consultas
- **Formato**: JSON, CSV, XML (dependendo do recurso)
- **Categorias Principais**:
  - Sa√∫de
  - Educa√ß√£o
  - Economia e Finan√ßas
  - Infraestrutura e Meio Ambiente
  - Agricultura
  - Seguran√ßa P√∫blica
  - Cultura e Esporte
  - Administra√ß√£o P√∫blica
""")

# Diagrama de arquitetura (texto representando um diagrama)
st.markdown('<div class="sub-header">Arquitetura da Aplica√ß√£o</div>', unsafe_allow_html=True)

st.markdown("""
```
+------------------+     +------------------+     +------------------+
|                  |     |                  |     |                  |
|  Usu√°rio Final   +---->+  Interface Web   +---->+  Processamento   |
|                  |     |   (Streamlit)    |     |    (Python)      |
|                  |     |                  |     |                  |
+------------------+     +------------------+     +--------+---------+
                                                          |
                                                          v
+------------------+     +------------------+     +------------------+
|                  |     |                  |     |                  |
|  Exporta√ß√£o de   |     |   Visualiza√ß√£o   |<----+  Conectores API  |
|   Resultados     |<----+    de Dados      |     |                  |
|                  |     |                  |     |                  |
+------------------+     +------------------+     +--------+---------+
                                                          |
                                                          v
                                               +------------------+
                                               |                  |
                                               |  APIs Externas   |
                                               |  (Dados Abertos) |
                                               |                  |
                                               +------------------+
```
""")

# Fluxo de uso
st.markdown('<div class="sub-header">Fluxo de Uso Principal</div>', unsafe_allow_html=True)

st.markdown("""
1. Usu√°rio acessa a aplica√ß√£o via navegador
2. Seleciona a origem dos dados (Portal da Transpar√™ncia ou dados.gov.br)
3. Navega pela hierarquia de categorias e bases dispon√≠veis
4. Seleciona uma base espec√≠fica para an√°lise
5. Configura par√¢metros de consulta (se necess√°rio)
6. Visualiza os dados carregados
7. Realiza an√°lises estat√≠sticas ou cruzamentos com outras bases
8. Exporta resultados em formato desejado (CSV, imagem)
""")

# M√©tricas de sucesso
st.markdown('<div class="sub-header">M√©tricas de Sucesso</div>', unsafe_allow_html=True)

metricas = [
    {
        "categoria": "Desempenho",
        "metrica": "Tempo de resposta para consultas simples",
        "alvo": "< 5 segundos"
    },
    {
        "categoria": "Desempenho",
        "metrica": "Capacidade de processamento",
        "alvo": "Datasets de at√© 1 milh√£o de linhas"
    },
    {
        "categoria": "Usabilidade",
        "metrica": "Precis√£o na interpreta√ß√£o de solicita√ß√µes em linguagem natural",
        "alvo": "> 80%"
    },
    {
        "categoria": "Usabilidade",
        "metrica": "Satisfa√ß√£o do usu√°rio",
        "alvo": "> 4/5 em pesquisas de feedback"
    },
    {
        "categoria": "Funcionalidade",
        "metrica": "Cobertura de fontes de dados",
        "alvo": "100% das fontes priorit√°rias"
    },
    {
        "categoria": "Funcionalidade",
        "metrica": "Sucesso em opera√ß√µes de cruzamento",
        "alvo": "> 90% para bases compat√≠veis"
    }
]

# Exibir m√©tricas em tabela
st.dataframe(
    pd.DataFrame(metricas),
    use_container_width=True,
    hide_index=True
)

# Limita√ß√µes conhecidas
st.markdown('<div class="sub-header">Limita√ß√µes Conhecidas</div>', unsafe_allow_html=True)

st.markdown("""
- **Volume de Dados**: Processamento limitado para conjuntos muito grandes
- **Disponibilidade de APIs**: Depend√™ncia da disponibilidade e estabilidade das APIs externas
- **Complexidade de An√°lises**: Algumas an√°lises avan√ßadas podem requerer ajustes manuais
- **Autentica√ß√£o**: Algumas consultas ao Portal da Transpar√™ncia requerem chave de API
- **Integra√ß√£o com IA**: Requer chave de API da OpenAI para funcionalidades completas
""")

# Rodap√©
st.markdown("---")
st.caption("Documento de Requisitos - Aplica√ß√£o Dados Abertos Gov - Vers√£o 1.0")
